7 + 3
7 - 3
7 * 3
7 / 3
7 %% 3
7 %/% 3
7 ^ 3
a <- c(6,7)
b <- c(4,3)
a + b
a - b
a * b
a / b
a %% b
a %/% b
a ^ b
a <- c(2,3,4)
b <- c(3,3,3)
a > b
a >= b
a < b
a <= b
a == b
a != b
a <- c(TRUE, FALSE, FALSE)
b <- c(TRUE, TRUE, FALSE)
a & b
a | b
!a
a && b
a || b
a <- 3
a = 3
a <<- 3
a
3 -> a
3 ->> a
a
3:8
"pizza" %in% c("pizza", "hamburger")
"cheese" %in% c("pizza", "hamburger")
a <- matrix(c(1,2,3,4), nrow=2, ncol=2)
b <- matrix(c(4,3,2,1), nrow=2, ncol=2)
a * b
a %*% b
x <- 36L
if(is.integer(x)) {}
if(is.integer(x)) {print("x는 정수")}
x <- 3.14
if(is.integer(x)) {print("x는 정수")} else{print("x는 정수가 아님")}
x <- "han"
switch(x, "kim"="김", "lee"="이", "han"="한")
print(i)
break
if(i==3) {
print(i)
break
}
i <- 1
repeat {i<-i+1}
if(i==3) {
print(i)
break
}
if(i==3) {
print(i)
break
}
i <- 1
repeat{}
repeat{}
repeat {
i <- i+1
if(i==3) {
print(i)
break
}
}
i <- 1
while(i<3) {
i <- i+1
}
i
v <- c(2,3,5,7,9,10)
s <- 0
for(ve in v) {
s <- s + ve
}
print(s)
v <- 1:10
for(ve in v) {
if(ve %% 2 == 0) {
next
}
print(ve)
}
mean(c(88,96,92))
png(file="result.png")
myFunc <- function(v) {
s <- 0
for(ve in v) {
s <- s + v
}
return(s)
}
myFunc(c(2,3,7))
a
A
# ㅇㅣ 강좌는
help(solve)
example(solve)
demo(persp)
data()
woman
women
stackloss
faithful
sleep
lattice
library(help=survial)
library(help=survival)
install.packages("lars")
?lars
??lars
x <- c(10.4, 5.6, 3.1, 6.4, 21.7)
x
1/x
y <- c(x, 0, x)
y
var(x)
sqrt(-17)
faithful
stackloss
15%/%7
15%%7
sum((x-mean(x))^2)/(length(x)-1)
var(x)
i <- 1
while(i<3) {}
while(i<3) {
i < i+1
}
i
1:30
c(1:30)
t <- c(1:30)
t
s3 <- seq(-5, 5, by=.2)
s3
s4 <- seq(length=51, from=-5, by=.2)
s4
s5 <- rep(x, times=5)
s5
s6 <- rep(x, each=5)
s6
install.packages("learnr")
2^3
2*3
3/3
3+3
3-3
q()
a <- rep("A", 1520) ; a
b <- rep("B", 770) ; b
c <- rep("C", 510)
c <- rep("C", 510);
c <- rep("C", 510); c
x <- c(a, b, c); x
table(x)
y <- as.matrix(table(x)) ; y
freq <- y[,1]; freq
relative_freq <- freq/sum(y)
z <- cbind(freq, relative_freq) ; z
x <- c(1520, 770, 510); x
lab <- c("A", "B", "C"); lab
y <- round(x/sum(x)*100, digits=1) ; y
w <- paste(lab, "(", y, "%", ")") ; w
pie(x, labels=w, main="PIE CHART")
x <- c(1,1,1,3,0,0,1,1,1,0,2,2,0,0,0,1,2,1,2,0,0,1,6,4,3,3,1,2,4,0) ;x
len(x)
length(x)
y <- as.matrix(table(x)); y
freq <- y[,1]; freq
rel_freq <- freq/sum(freq); rel_freq
csum <- cumsum(freq); csum
c_rel_freq <- csum/sum(freq) ; c_rel_freq
z <- cbind(freq, rel_freq, csum, c_rel_freq); z
data()
hist(faithful$waiting)
stem(faithful$waiting)
data()
x <- srackloss$stack.loss ; x
x <- srackloss$stack.loss
data()
x <- stackloss$stack.loss ; x
mean(x)
var(x)
sd(x)
s <- sort(x); s
length(x)
quantile(x, c(0.1,0.25,0.5,0.95))
fivenum(x)
summary(x)
boxplot(x)
boxplot(x, range=0)
boxplot(x, range=1.5)
boxplot(x, range=1.0)
x <- faithful$eruptions
y <- faithful$waiting
plot(x,y)
cor(x,y)
0 <- vector([0, 0])
source('~/CloudStation/BIGDATA/통계학/MOOC2.R', encoding = 'EUC-KR')
setwd("~/CloudStation/BIGDATA/통계학/")
pie <- scan("pie.txt", what="character")
table(pie)
Sale <- table(pie)
sum(Sale)
Total <- sum(Sale)
100*Sale/Total
SaleProp <- 100*Sale/Total
SaleProp <- round(SaleProp,1)
Pie.Freq <- cbind(Sale,SaleProp)
colnames(Pie.Freq) <- c("판매량","판매비율")
Pie.Freq
pie <- scan("pie.txt", what="character")
table(pie)
pie(SaleProp)
names(SaleProp)
Percent <- c("고구마(11.5%)","딸기(22.2%)","바나나(7.3%)",
"블루베리(20.1%)","애플(25.2%)","초코(13.7%)")
names(SaleProp) <- Percent
pie(SaleProp)
pie <- scan("pie.txt", what="character")
table(pie)
pie <- scan("pie.txt", what="character")
table(pie)
pie <- scan("pie.txt", what="character", encoding="utf-8")
table(pie)
pie <- scan("pie.txt", what="character")
table(pie)
pie <- scan("pie.txt", what="character")
table(pie)
pie <- scan("pie.txt", what="character")
table(pie)
pie <- scan("pie.txt", what="character")
table(pie)
pie <- read.csv("pie.txt", header= TRUE, encoding="utf-8")
pie <- scan("pie.txt", what="character")
table(pie)
Sale <- table(pie)
Total <- sum(Sale)
100*Sale/Total
SaleProp <- 100*Sale/Total
SaleProp <- round(SaleProp,1)
Pie.Freq <- cbind(Sale,SaleProp)
colnames(Pie.Freq) <- c("판매량","판매비율")
pie(SaleProp)
Pie.Freq
pie(SaleProp)
names(SaleProp)
Percent <- c("고구마(11.5%)","딸기(22.2%)","바나나(7.3%)",
"블루베리(20.1%)","애플(25.2%)","초코(13.7%)")
names(SaleProp) <- Percent
pie(SaleProp)
install.packages(c("codetools", "KernSmooth", "nlme"))
pie(SaleProp)
pie(SaleProp)
pie <- scan("pie.txt", what="character")
table(pie)
Sale <- table(pie)
sum(Sale)
Total <- sum(Sale)
100*Sale/Total
SaleProp <- 100*Sale/Total
SaleProp <- round(SaleProp,1)
cbind(Sale,SaleProp)
Pie.Freq <- cbind(Sale,SaleProp)
colnames(Pie.Freq) <- c("판매량","판매비율")
Pie.Freq
pie(SaleProp)
names(SaleProp)
Percent <- c("고구마(11.5%)","딸기(22.2%)","바나나(7.3%)",
"블루베리(20.1%)","애플(25.2%)","초코(13.7%)")
names(SaleProp) <- Percent
pie(SaleProp)
names(SaleProp) <- c("고구마(11.5%)","딸기(22.2%)","바나나(7.3%)",
"블루베리(20.1%)","애플(25.2%)","초코(13.7%)")
pie(SaleProp)
pie(SaleProp)
Sale <- table(pie)
Total <- sum(Sale)
SaleProp <- 100*Sale/Total
SaleProp <- round(SaleProp,1)
Pie.Freq <- cbind(Sale,SaleProp)
colnames(Pie.Freq) <- c("판매량","판매비율")
Pie.Freq
pie(SaleProp)
names(SaleProp)
names(SaleProp) <- c("고구마(11.5%)","딸기(22.2%)","바나나(7.3%)",
"블루베리(20.1%)","애플(25.2%)","초코(13.7%)")
pie(SaleProp)
names(SaleProp)
pie(SaleProp)
barplot(Sale,ylim=c(0,60),space=0.5)
barplot(Sale,ylim=c(0,60),space=0.0)
abline(h=0)
abline(h=c(20,40,60),lty=3)
Sys.setlocale(category = "LC_CTYPE", locale = "ko_KR.UTF-8")
theme_set(theme_gray(base_family="AppleGothic"))
abline(h=c(20,40,60),lty=3)
barplot(Sale,ylim=c(0,60),space=0.0)
pie(SaleProp)
barplot(Sale,ylim=c(0,60),space=0.0)
abline(h=c(20,40,60),lty=3)
pie(SaleProp)
pie(SaleProp)
pie(SaleProp)
install.packages("extrafont")
library(extrafont)
font_import()
pie(SaleProp)
pie(SaleProp)
Sys.setlocale('LC_ALL', 'ko_KR.UTF-8')
sessionInfo()
pie(SaleProp)
pie(SaleProp, family="AppleGothic")
barplot(Sale,ylim=c(0,60),space=0.0)
barplot(Sale,ylim=c(0,60),space=0.0, family="AppleGothic")
abline(h=c(20,40,60),lty=3, family="AppleGothic")
abline(h=0)
pie(SaleProp)
table(pie)
pie(SaleProp)
pie(SaleProp, family="AppleGothic")
barplot(Sale,ylim=c(0,60),space=0.0)
barplot(Sale,ylim=c(0,60),space=0.0, family="AppleGothic")
abline(h=0)
abline(h=c(20,40,60),lty=3, family="AppleGothic")
Sys.setlocale("LC_CTYPE", "ko_KR.UTF-8")
abline(h=c(20,40,60),lty=3, family="d2Coding")
barplot(Sale,ylim=c(0,60),space=0.0, family="d2Coding")
barplot(Sale,ylim=c(0,60),space=0.0, family="AppleGothic")
abline(h=c(20,40,60),lty=3, family="AppleGothic")
Job <- scan()
scan()
cut(Job, breaks=c(10, 39.9, 49.9, 59.9, 69.9, 79.9, 100))
localeToCharset()
Sys.setlocale()
Sys.setlocale()
pie(SaleProp, family="AppleGothic")
barplot(Sale,ylim=c(0,60),space=0.0, family="AppleGothic")
names(SaleProp)
pie(SaleProp)
pie(SaleProp, family="AppleGothic")
names(SaleProp)
names(SaleProp) <- c("고구마(11.5%)","딸기(22.2%)","바나나(7.3%)",
"블루베리(20.1%)","애플(25.2%)","초코(13.7%)")
pie(SaleProp, family="AppleGothic")
barplot(Sale,ylim=c(0,60),space=0.0, family="AppleGothic")
abline(h=0)
abline(h=c(20,40,60),lty=3, family="AppleGothic")
cut(Job, breaks=c(10, 39.9, 49.9, 59.9, 69.9, 79.9, 100))
JobFreq <- table(JobCut)
JobCut <- cut(Job, breaks=c(10, 39.9, 49.9, 59.9, 69.9, 79.9, 100))
JobFreq <- table(JobCut)
round(JobFreq/sum(JobFreq),3)
JobProp <- round(JobFreq/sum(JobFreq),3)
CumJobProp <- cumsum(JobProp)
Result <- cbind(JobFreq,JobProp,CumJobProp)
Result
colnames(Result) <- c("학과수","상대도수","누적상대도수")
rownames(Result) <- c("10%이상~40%미만","40%이상~50%미만","50%이상~60%미만",
"60%이상~70%미만","70%이상~80%미만","80%이상~100%")
Result
hist(Job)
hist(Job,freq=FALSE)
hist(Job,breaks = c(10, 39.99, 49.99, 59.99, 69.99, 79.99, 100),
main = "취업률 히스토그램", xlab = "취업률", ylab = "밀도")
hist(Job,breaks = c(10, 39.99, 49.99, 59.99, 69.99, 79.99, 100),
main = "취업률 히스토그램", xlab = "취업률", ylab = "밀도", family="AppleGothic")
par(mfrow=c(1,2))
hist(Job,freq=FALSE,ylim=c(0,0.035))
hist(Job,breaks = c(10, 39.99, 49.99, 59.99, 69.99, 79.99, 100),
main = "취업률 히스토그램", xlab = "취업률", ylab = "밀도",ylim=c(0,0.035))
hist(Job,breaks = c(10, 39.99, 49.99, 59.99, 69.99, 79.99, 100),
main = "취업률 히스토그램", xlab = "취업률", ylab = "밀도",ylim=c(0,0.035), family="AppleGothic")
stem(Job)
scan("pie.txt", what="character")
JobCut <- cut(Job, breaks=c(10, 39.9, 49.9, 59.9, 69.9, 79.9, 100))
JobCut
JobCut <- cut(Job, breaks=c(10, 39.9, 49.9, 59.9, 69.9, 79.9, 100), right=FALSE)
JobCut
score <- scan("Score.txt", what="character")
score
Score <- table(score)
Score
Total <- sum(Score)
Total
Scoreprop <- round(100*Score/Total, 1)
Scoreprop
Pie.Freq <- cbind(Score, Scoreprop)
colnames(Pie.Freq) <- c("학점", "비율")
Scoreprop
colnames(Pie.Freq) <- c("학점", "비율")
pie(Scoreprop, family="AppleGothic")
CumScoreprop <- cumsum(Scoreprop)
CumScoreprop
barplot(Score, ylim=(0, 30), space=0, family="AppleGothic")
barplot(Score, ylim=(0:30), space=0, family="AppleGothic")
barplot(Score, ylim=(0,30), space=0, family="AppleGothic")
barplot(Score, ylim=(30), space=0, family="AppleGothic")
barplot(Score, ylim=30, space=0, family="AppleGothic")
barplot(Scoreprop, ylim=30, space=0, family="AppleGothic")
barplot(Score, ylim=c(0,30), space=0, family="AppleGothic")
barplot(Score, ylim=c(0,30), space=0.5, family="AppleGothic")
barplot(Score, ylim=c(0,20), space=0.5, family="AppleGothic")
names(Scoreprop) <- c("A+(4.8%", "A(9.7%)", "B+(19.4)", "B(25.8)", "C+(16.1)", "C(12.9%)", "D+(6.5%)", "D(1.6&)", "F(3.2%)")
pie(Scoreprop)
sort(Scoreprop)
score.preq <- table(score)
score.preq <- score.preq[c("A+","A","B+","B","C+","C","D+","D","F")]
pie(score.preq)
barplot(score.preq, ylim=c(0,20), space=0.5)
barplot(score.preq, xlim=c(A+,F), ylim=c(0,20), space=0.5)
hist(score)
hist(score.preq)
score <- scan("score.txt", what = "characyer")
score
grade <- table(score)
grade
GradeCut <- cut(grade, breaks = c("A+","A","B+","B","C+","C","D+","D","F"))
GradeCut
score <- c("A+","A","B+","B","C+","C","D+","D","F")
score
grade <- table(score)
grade
clearPushBack()
grade <- scan("score.txt", what = "characyer")
gradesort <- table(grade)
gradesort <- gradesort[c("A+","A","B+","B","C+","C","D+","D","F")]
gradesort
GradeFreq <- table(gradesort)
GradeFreq
GradeProp <- round(gradesort/sum(gradesort),1)
GradeProp
GradeProp <- round(gradesort/sum(gradesort),3)
GradeProp
CumGradeProp <- cumsum(GradeProp)
CumGradeProp
result <- cbind(gradesort, GradeProp, CumGradeProp)
result
colnames(result) <- c("학생수", "상대도수", "누적상대도수")
result
hist(gradesort)
hist(gradesort, freq = FALSE)
hist(gradesort, breaks = c("A+","A","B+","B","C+","C","D+","D","F"), main = "학점히스토그램", xlab = "학점", ylab = "밀도", ylim = c(0,0.03), family="AppleGothic")
hist(gradesort, main = "학점히스토그램", xlab = "학점", ylab = "밀도", ylim = c(0,0.03), family="AppleGothic")
hist(gradesort, main = "학점히스토그램", xlab = "학점", ylab = "밀도", ylim = c(0,0.3), family="AppleGothic")
hist(gradesort, main = "학점히스토그램", xlab = "학점", ylab = "밀도", ylim = c(0,1), family="AppleGothic")
hist(gradesort, main = "학점히스토그램", xlab = "학점", ylab = "밀도", ylim = c(0,10), family="AppleGothic")
View(result)
hist(grade, main = "학점히스토그램", xlab = "학점", ylab = "밀도", ylim = c(0,10), family="AppleGothic")
hist(grade, breaks = c("A+","A","B+","B","C+","C","D+","D","F"), main = "학점히스토그램", xlab = "학점", ylab = "밀도", ylim = c(0,20), family="AppleGothic")
hist(grade, main = "학점히스토그램", xlab = "학점", ylab = "밀도", ylim = c(0,20), family="AppleGothic")
hist(GradeFreq, main = "학점히스토그램", xlab = "학점", ylab = "밀도", ylim = c(0,20), family="AppleGothic")
hist(GradeProp, main = "학점히스토그램", xlab = "학점", ylab = "밀도", ylim = c(0,20), family="AppleGothic")
rownames(result) <- c("A+","A","B+","B","C+","C","D+","D","F")
hist(GradeProp, main = "학점히스토그램", xlab = "학점", ylab = "밀도", ylim = c(0,20), family="AppleGothic")
hist(grade, breaks = c("A+","A","B+","B","C+","C","D+","D","F"), main = "학점히스토그램", xlab = "학점", ylab = "밀도", ylim = c(0,20), family="AppleGothic")
View(result)
hist(grade)
hist(GradeFreq)
hist(GradeFreq, freq = FALSE)
hist(Gradesort, freq = FALSE)
hist(gradesort)
hist(Gradesort, freq = FALSE)
View(result)
hist(result)
hist(result, freq = FALSE)
hist(result, breaks = c("A+","A","B+","B","C+","C","D+","D","F"), main = "학점히스토그램", xlab = "학점", ylab = "학생수", ylim = c(0,20), family="AppleGothic")
par(mfrow=c(1,2))
hist(result)
hist(result, freq=FALSE)
hist.default()
hist.default(result)
hist(gradesort, freq = FALSE, ylim = c(0,20))
hist(gradefreq, freq = FALSE, ylim = c(0,20))
hist(gradeprop, freq = FALSE, ylim = c(0,20))
hist(grade, freq = FALSE, ylim = c(0,20))
grade <- scan("score.txt", what = "character")
grade <- table(grade)
grade
grade <- grade[c("A+","A","B+","B","C+","C","D+","D","F")]
grade
total <- sum(grade)
gradeprop <- round(100*grade/total,2)
Grade.Freq <- cbind(grade, gradeprop)
View(Grade.Freq)
cumgradeprop <- cumsum(gradeprop)
colnames(Grade.Freq) <- c("학생수", "학점비율")
barplot(grade, ylim = c(0,20), space = 0, family="AppleGothic")
names(gradeprop) <- c("A+","A","B+","B","C+","C","D+","D","F")
barplot(grade, ylim = c(0,20), space = 0.5, family="AppleGothic")
abline(h=0)
abline(h=c(5,10,15), lty=3, family="AppleGothic")
barplot(grade, space = 1.5, main = "학점챠트", xlab = "학점",ylab = "학생수", ylim = c(0,20), family="AppleGothic")
abline(h=c(5,10,15), lty=3, family="AppleGothic")
abline(h=0)
View(Grade.Freq)
Grade.Freq <- cbind(grade, gradeprop, cumgradeprop)
View(Grade.Freq)
